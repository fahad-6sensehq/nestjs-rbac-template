import eslint from '@eslint/js';
import eslintPluginPrettierRecommended from 'eslint-plugin-prettier/recommended';
import globals from 'globals';
import tseslint from 'typescript-eslint';

export default tseslint.config(
    {
        ignores: ['eslint.config.mjs', '.eslintrc.js', 'dist/', 'node_modules/', 'coverage/'],
    },
    eslint.configs.recommended,
    ...tseslint.configs.recommendedTypeChecked,
    eslintPluginPrettierRecommended,
    {
        languageOptions: {
            globals: {
                ...globals.node,
                ...globals.jest,
            },
            ecmaVersion: 5,
            sourceType: 'module',
            parserOptions: {
                projectService: true,
                tsconfigRootDir: import.meta.dirname,
            },
        },
    },
    {
        rules: {
            'unused-imports/no-unused-imports': 'error',
            '@typescript-eslint/no-unused-vars': 'error',
            '@typescript-eslint/explicit-function-return-type': 'error',
            '@typescript-eslint/explicit-module-boundary-types': 'error',
            '@typescript-eslint/no-empty-function': 'error',
            '@typescript-eslint/no-non-null-assertion': 'off',
            '@typescript-eslint/strict-boolean-expressions': 'off',
            '@typescript-eslint/no-explicit-any': 'off',
            '@typescript-eslint/naming-convention': [
                'error',
                {
                    selector: 'interface',
                    format: ['PascalCase'],
                    custom: {
                        regex: '^I[A-Z]',
                        match: true,
                    },
                },
            ],
            '@typescript-eslint/no-duplicate-enum-values': 'error',
            'no-duplicate-imports': 'off',
            '@typescript-eslint/no-duplicate-imports': 'error',
            '@typescript-eslint/no-require-imports': 'error',
            '@typescript-eslint/no-useless-empty-export': 'error',
            'prefer-const': 'error',
            '@typescript-eslint/consistent-generic-constructors': 'error',
            '@typescript-eslint/consistent-type-definitions': 'error',
            '@typescript-eslint/consistent-type-exports': 'error',
            '@typescript-eslint/method-signature-style': 'error',
            '@typescript-eslint/no-confusing-void-expression': 'error',
            '@typescript-eslint/no-dynamic-delete': 'error',
            '@typescript-eslint/no-extra-non-null-assertion': 'error',
            '@typescript-eslint/no-inferrable-types': 'error',
            '@typescript-eslint/no-non-null-assertion': 'error',
            '@typescript-eslint/no-redundant-type-constituents': 'error',
            '@typescript-eslint/no-this-alias': 'error',
            '@typescript-eslint/ban-ts-comment': 'error',
            '@typescript-eslint/ban-types': 'off',
            '@typescript-eslint/no-unnecessary-qualifier': 'error',
            '@typescript-eslint/no-unnecessary-type-constraint': 'error',
            '@typescript-eslint/no-unsafe-argument': 'off',
            '@typescript-eslint/no-unsafe-assignment': 'off',
            '@typescript-eslint/no-unsafe-return': 'off',
            '@typescript-eslint/prefer-enum-initializers': 'error',
            '@typescript-eslint/prefer-function-type': 'error',
            '@typescript-eslint/prefer-string-starts-ends-with': 'error',
            '@typescript-eslint/restrict-plus-operands': 'error',
            '@typescript-eslint/switch-exhaustiveness-check': 'error',
            '@typescript-eslint/unified-signatures': 'error',
            'no-implied-eval': 'off',
            '@typescript-eslint/no-implied-eval': 'error',
            'no-use-before-define': 'off',
            '@typescript-eslint/no-use-before-define': 'error',
            'arrow-body-style': ['error', 'always'],
            'block-scoped-var': 'error',
            'default-case-last': 'error',
            'default-param-last': 'error',
            'max-classes-per-file': ['error', 1],
            'max-params': ['error', 5],
            'no-else-return': 'error',
            'no-empty': 'error',
            'no-empty-function': 'error',
            'no-extra-semi': 'error',
            'no-floating-decimal': 'error',
            'no-nested-ternary': 'error',
            'no-new': 'error',
            'no-new-object': 'error',
            'no-param-reassign': 'error',
            'no-useless-concat': 'error',
            'no-useless-return': 'error',
            'prefer-template': 'error',
            // 'max-classes-per-file': 'off',
            'no-unsafe-member-access': 'off',
            '@typescript-eslint/no-unsafe-call': 'off',
            "@typescript-eslint/no-unsafe-member-access": "off"
        },
    },
);
